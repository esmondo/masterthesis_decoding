function [data_meg,data_eeg,data_eog,...
    corrTargPos,...
    nummegxcl,numeegxcl,...
    numCorrTrial,numGutTrial,numBadTrial,...
    numONtrial,numMIDtrial,numOFFtrial,numMentalTrial,...
    timeIdx,timeNew] = prepro_for_n2pc(meg,eeg,eog)

[~,corID] = corrResponse(meg.side,meg.response);


data_meg = double(meg.data(:,:,corID));
data_eeg = double(eeg.data(:,:,corID));
data_eog = double(eog.data(:,:,corID));

time = meg.time;
% timeEOG = eog.time;

targetSide = meg.side(corID);
subjectRes = meg.response(corID);
targetPos = meg.position(corID);
focusRate = meg.fokus(corID);

%%
% data = double(meg.data);
% dataEOG = double(eog.data);
% 
% time = meg.time;
% timeEOG = eog.time;
% 
% targetSide = meg.side;
% subjectRes = meg.response;
% targetPos = meg.position;
% focusRate = meg.fokus;

%% time range -200 to 800ms

% timeIdx = find(time>=-0.2 & time<=0.8);
% timeNew = time(timeIdx);
% data = data(:,timeIdx,:);
% dataEOG = dataEOG(:,timeIdx,:);

%% Filtering and Artifact Rejection

% 
%     if whichdata == 1
%         
%         % High Pass filter
%         data_meg = highpass(3.0,meg.srate,data_meg);
%     
%         % Artficat Detection
%         artFind = findArtifacts(data_meg);
%         data_meg(:,:,artFind) = [];
%     
%         % removing artifacts in side of targets's tilt
%         targetSide(artFind) = [];
% 
%         % removing artifacts in subject's response
%         subjectRes(artFind) = [];
% 
%         % removing artifacts in position where the target appeared
%         targetPos(artFind) = [];
%         
%         % removing artifacts in participant's focus ratings
%         focusRate(artFind) = [];
%         
%     elseif whichdata == 3
%         
%         % Band Pass filter
%         data_meg = bandpass(1,200,meg.srate,data_meg);
%         data_eog = bandpass(1,30,eog.srate,data_eog);
%           
% %           for c = 1:102
% %               disp(c)
% %               meg2.data       = double(meg.data(c,:));
% %               meg2.srate      = meg.srate;
% %               meg2            = ibandpass(meg2,[1 200]);
% %               meg.data(c,:) = single(meg2.BP - repmat( mean( meg2.BP,2 ),[1 length( meg2.BP )]));
% %           end
%         
%         % Eye Movement Rejection        
%         data_meg = rejectComponent(data_meg,squeeze(data_eog(1,:,:))); % HEOG
%                  
%         % Artficat Detection
%         artFind = findArtifacts(data_meg);
%         
%         % Artifact Rejection
%         data_meg(:,:,artFind) = [];
%         targetSide(artFind) = []; % removing artifacts in side of targets's tilt
%         subjectRes(artFind) = []; % removing artifacts in subject's response
%         targetPos(artFind) = []; % removing artifacts in position where the target appeared
%         focusRate(artFind) = []; % removing artifacts in participant's focus ratings
%         
%         
%     elseif whichdata == 5
        
        % Band Pass filter
        data_meg = bandpass(1,200,meg.srate,data_meg);
        data_eeg = bandpass(1,200,eeg.srate,data_eeg);
        data_eog = bandpass(1,30,eog.srate,data_eog);
        
        % Eye Movement Rejection        
        data_meg = rejectComponent(data_meg,squeeze(data_eog(1,:,:))); % HEOG
        data_eeg = rejectComponent(data_eeg,squeeze(data_eog(1,:,:)));
                 
        % Artficat Detection
%         artFind = findArtifacts_MEG(data_meg);
%         artFind2 = findArti(data_meg);
        megxcl = findArti_meg(data_meg);
        eegxcl = findArti_eeg(data_eeg);
        % is an artifact rejection within eog even needed?
        
        % Artifact Rejection
%         data_meg(:,:,artFind) = [];
        xcl = unique([ megxcl eegxcl]);
        
        data_meg(:,:,xcl) = [];
        data_eeg(:,:,xcl) = [];
        data_eog(:,:,xcl) = [];
        targetSide(xcl) = []; % removing artifacts in side of targets's tilt
        subjectRes(xcl) = []; % removing artifacts in subject's response
        targetPos(xcl) = []; % removing artifacts in position where the target appeared
        focusRate(xcl) = []; % removing artifacts in participant's focus ratings
        
%         targetSide(artFind) = []; % removing artifacts in side of targets's tilt
%         subjectRes(artFind) = []; % removing artifacts in subject's response
%         targetPos(artFind) = []; % removing artifacts in position where the target appeared
%         focusRate(artFind) = []; % removing artifacts in participant's focus ratings
                 
%     end

%% Baseline correction (and downsample if necessary)

if meg.srate == 2000
    
    Fs = 400;
    [data_meg,time_meg] = dwsample(size(data_meg,1),Fs,meg.srate,data_meg,time);
    [data_eeg,time_eeg] = dwsample(size(data_eeg,1),Fs,meg.srate,data_eeg,time);
    
    data_meg = baseline(data_meg,time_meg);
    data_eeg = baseline(data_eeg,time_eeg);
    
    timeIdx = find(time_meg>=-0.2 & time_meg<=0.8); % time range -200 to 800ms
    timeNew = time_meg(timeIdx);
    
elseif meg.srate == 500
    
    data_meg = baseline(data_meg,time);
    data_eeg = baseline(data_eeg,time);
    
    timeIdx = find(time>=-0.2 & time<=0.8); % time range -200 to 800ms
    timeNew = time(timeIdx);
    
else
    
    return;
    
end
    

    

%     if whichdata == 1
%         Fs = 100;
%     elseif whichdata == 2
%         Fs = 400;
%     else
%         Fs = meg.srate;
%     end

% [timeDS,dataDS] = dwsample(size(data_meg,1),Fs,meg.srate,data_meg,time);
% [timeDSe,dataDSe] = dwsample(size(data_eeg,1),Fs,meg.srate,data_eeg,time);



%%
% timeIdx = find(timeDS>=-0.2 & timeDS<=0.8);
% timeNew = timeDS(timeIdx);
% dataDS = dataDS(:,timeIdx,:);

% data_meg = baseline(dataDS,timeDS); % baseline correction
% data_eeg = baseline(dataDSe,timeDSe);

%% time range -200 to 800ms
 
% timeIdx = find(time_meg>=-0.2 & time_meg<=0.8);
% timeNew = time_meg(timeIdx);

%% correct respose from subject

% [corrResp, idxCorrResp] = corrResponse(targetSide,subjectRes);
% 
% % correct target presentation's side
% corrSide = targetSide(idxCorrResp);
% 
% % correct focus ratings
% corrFocus = focusRate(idxCorrResp);
% 
% % correct position
% corrTargPos = targetPos(idxCorrResp);





% correct target presentation's side
corrSide = targetSide;

% correct focus ratings
corrFocus = focusRate;

% correct position
corrTargPos = targetPos;


%% index of trials when the focus question occured
idxMental = find(corrFocus > 0);

idxON = find(ismember(corrFocus,[4,5]));
idxMID = find(ismember(corrFocus,[3]));
idxOFF = find(ismember(corrFocus,[1,2]));


% mentalStr = cell(size(corrFocus(idxMental)));
% mentalStr(corrFocus(idxMental) == 1) = {'OFF'};
% mentalStr(corrFocus(idxMental) == 2) = {'OFF'};
% mentalStr(corrFocus(idxMental) == 3) = {'MID'};
% mentalStr(corrFocus(idxMental) == 4) = {'ON'};
% mentalStr(corrFocus(idxMental) == 5) = {'ON'};
% mentalStr = mentalStr';

%% Final and clean data

% data indicated by mental states
% dataON = data(:,timeIdx,idxON);
% dataMID = data(:,timeIdx,idxMID);
% dataOFF = data(:,timeIdx,idxOFF);
% dataMental = data(:,timeIdx,idxMental);

% the main data
data_meg = data_meg(:,timeIdx,:); 
data_eeg = data_eeg(:,timeIdx,:);
data_eog = data_eog(:,timeIdx,:);
% data = data(:,:,idxCorrResp);

%% number of cleared trial:

nummegxcl = length(megxcl);
numeegxcl = length(eegxcl);
numCorrTrial = length(corID);
numGutTrial = size(data_meg,3); % from good trials of eeg and meg combined
numBadTrial = size(meg.data,3)-numGutTrial;
numONtrial = length(idxON);
numMIDtrial = length(idxMID);
numOFFtrial = length(idxOFF);
numMentalTrial = length(idxMental);

end